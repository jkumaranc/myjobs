<?xml version="1.0" encoding="UTF-8"?>

<!--
  - Sample namespace-based configuration
  -
  - $Id: applicationContext-application-context.xml 4074 2009-12-18 18:44:17Z ltaylor $
  -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
             http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">
    <context:component-scan base-package="org.jk.myjobs"/>
    <global-method-security secured-annotations="enabled" jsr250-annotations="enabled">
        <!-- AspectJ pointcut expression that locates our "post" method and applies security that way
        <protect-pointcut expression="execution(* bigbank.*Service.post*(..))" access="ROLE_TELLER"/>

        -->
    </global-method-security>

    <http use-expressions="true">
        <!-- once-per-request is important for forward once-per-request="false"-->
        <!--<intercept-url pattern="/secure/extreme/**" access="hasRole('ROLE_SUPERVISOR')"/>-->
        <!--<intercept-url pattern="/secure/**" access="isAuthenticated()" />-->
        <intercept-url pattern="/secured/**" access="isAuthenticated()"/>
        <!-- Disable web URI authorization, as we're using <global-method-security> and have @Secured the services layer instead
        <intercept-url pattern="/listAccounts.html" access="isRememberMe()" />
        <intercept-url pattern="/post.html" access="hasRole('ROLE_TELLER')" />
        -->
        <intercept-url pattern="/**" access="permitAll()"/>
        <!-- login-processing-url="/jojo" is not used -->
        <form-login
                login-processing-url="/j_spring_security_check"
                login-page="/public/login.jsf"
                default-target-url="/secured/applications.jsf"
                authentication-failure-url="/public/login.jsf?login_error=1"/>
        <logout logout-url="/j_spring_security_logout" logout-success-url="/public/login.jsf"/>
        <!-- defaults to /j_spring_security_logout -->
        <!-- invalidate-session="false" -->
        <!--<form-login />
        <remember-me />-->
        <!--
        Uncomment to enable X509 client authentication support
        <x509 />
        -->
        <!-- Uncomment to limit the number of sessions a user can have -->
        <session-management>
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="false"/>
        </session-management>
    </http>

    <!--
    Usernames/Passwords are
        rod/koala
        dianne/emu
        scott/wombat
        peter/opal
    -->
    <!--
    <authentication-manager>
        <authentication-provider>
            <password-encoder hash="md5"/>
            <user-service>
                <user name="rod" password="a564de63c2d0da68cf47586ee05984d7" authorities="ROLE_SUPERVISOR, ROLE_USER, ROLE_TELLER" />
                <user name="dianne" password="65d15fe9156f9c4bbffd98085992a44e" authorities="ROLE_USER,ROLE_TELLER" />
                <user name="scott" password="2b58af6dddbd072ed27ffc86725d7d3a" authorities="ROLE_USER" />
                <user name="peter" password="22b5c9accc6e1ba628cedc63a72d57f8" authorities="ROLE_USER" />
            </user-service>
        </authentication-provider>
    </authentication-manager>
    -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="inMemoryDao"/>
    </authentication-manager>

    <beans:bean id="inMemoryDao" class="org.springframework.security.core.userdetails.memory.InMemoryDaoImpl">
        <beans:property name="userMap">
            <beans:value>
                roger=roger,ROLE_ADMIN
                rafael=rafael,ROLE_USER
            </beans:value>
        </beans:property>
    </beans:bean>

    <!-- Automatically receives AuthenticationEvent messages -->
    <beans:bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener"/>

    <!-- Here on myjobs specific beans-->
    <beans:bean id="repository" class="org.jk.myjobs.dao.impl.MockRepository"/>
</beans:beans>